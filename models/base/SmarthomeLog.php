<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "t_smarthome_log".
 *
 * @property integer $id_user
 * @property integer $id_smarthome
 * @property integer $id_sirkuit
 * @property string $suhu
 * @property string $kelembapan
 * @property string $tegangan
 * @property string $daya
 * @property string $ampere
 * @property string $created_at
 * @property integer $id
 * @property string $aliasModel
 */
abstract class SmarthomeLog extends \yii\db\ActiveRecord
{
    /**
     * BaseModel rules. 
     **/
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_smarthome_log';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \app\components\behaviors\UUIDBehavior::class,
                'model' => get_called_class(),
                'primaryKey' => 'id',
            ],
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => false,
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id_user', 'id_smarthome', 'id_sirkuit', 'suhu', 'kelembapan', 'tegangan', 'daya', 'ampere', 'created_at'], 'required'],
            [['id_user', 'id_smarthome', 'id_sirkuit'], 'integer'],
            [['created_at'], 'safe'],
            [['suhu', 'kelembapan', 'tegangan', 'daya', 'ampere'], 'string', 'max' => 10],
            [['id'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'id_user' => 'User',
            'id_smarthome' => 'Smarthome',
            'id_sirkuit' => 'Sirkuit',
            'suhu' => 'Suhu',
            'kelembapan' => 'Kelembapan',
            'tegangan' => 'Tegangan',
            'daya' => 'Daya',
            'ampere' => 'Ampere',
            'created_at' => 'Dibuat pada',
        ];
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'id_user',
            'id_smarthome',
            'id_sirkuit',
            'suhu',
            'kelembapan',
            'tegangan',
            'daya',
            'ampere',
            'created_at',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if(isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function($model) {
                return $model->id;
            };
        endif;
        if(isset($parent['id_user'])) :
            unset($parent['id_user']);
            $parent['id_user'] = function($model) {
                return $model->id_user;
            };
        endif;
        if(isset($parent['id_smarthome'])) :
            unset($parent['id_smarthome']);
            $parent['id_smarthome'] = function($model) {
                return $model->id_smarthome;
            };
        endif;
        if(isset($parent['id_sirkuit'])) :
            unset($parent['id_sirkuit']);
            $parent['id_sirkuit'] = function($model) {
                return $model->id_sirkuit;
            };
        endif;
        if(isset($parent['suhu'])) :
            unset($parent['suhu']);
            $parent['suhu'] = function($model) {
                return $model->suhu;
            };
        endif;
        if(isset($parent['kelembapan'])) :
            unset($parent['kelembapan']);
            $parent['kelembapan'] = function($model) {
                return $model->kelembapan;
            };
        endif;
        if(isset($parent['tegangan'])) :
            unset($parent['tegangan']);
            $parent['tegangan'] = function($model) {
                return $model->tegangan;
            };
        endif;
        if(isset($parent['daya'])) :
            unset($parent['daya']);
            $parent['daya'] = function($model) {
                return $model->daya;
            };
        endif;
        if(isset($parent['ampere'])) :
            unset($parent['ampere']);
            $parent['ampere'] = function($model) {
                return $model->ampere;
            };
        endif;
        if(isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->created_at, false);
            };
        endif;



        return $parent;
    }


    public static function faker($count = 10){
        $faker= \Faker\Factory::create();
        $faker->addProvider(new \app\components\faker\provider\MyImage($faker));
        $data = [];
        $maxId = static::find()->max('id');

        // relational data
        for ($i = 0; $i < $count; $i++) {
            $data[] = [ 
                "id_user" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "id_smarthome" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "id_sirkuit" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "suhu" => $faker->text(),
                "kelembapan" => $faker->text(),
                "tegangan" => $faker->text(),
                "daya" => $faker->text(),
                "ampere" => $faker->text(),
                "created_at" => $faker->dateTime(),
                "id" => $faker->unique()->numberBetween($maxId, $maxId + $count),
            ];
        }
        return $data;
    }

}
