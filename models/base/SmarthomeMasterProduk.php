<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "t_smarthome_master_produk".
 *
 * @property string $kode_produk
 * @property integer $digunakan
 * @property integer $reset
 * @property string $created_at
 * @property integer $flag
 * @property integer $id
 *
 * @property \app\models\SmarthomeMasterProdukPair[] $smarthomeMasterProdukPairs
 * @property \app\models\SmarthomeSirkuit[] $smarthomeSirkuits
 * @property string $aliasModel
 */
abstract class SmarthomeMasterProduk extends \yii\db\ActiveRecord
{
    /**
     * BaseModel rules. 
     **/
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_smarthome_master_produk';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \app\components\behaviors\UUIDBehavior::class,
                'model' => get_called_class(),
                'primaryKey' => 'id',
            ],
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => false,
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['kode_produk'], 'required'],
            [['digunakan', 'reset', 'flag'], 'integer'],
            [['created_at'], 'safe'],
            [['kode_produk'], 'string', 'max' => 30],
            [['id'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'kode_produk' => 'Kode Produk',
            'digunakan' => 'Digunakan',
            'reset' => 'Reset',
            'created_at' => 'Dibuat pada',
            'flag' => 'Flag',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSmarthomeMasterProdukPairs()
    {
        return $this->hasMany(\app\models\SmarthomeMasterProdukPair::class, ['id_master_produk' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSmarthomeSirkuits()
    {
        return $this->hasMany(\app\models\SmarthomeSirkuit::class, ['id_produk' => 'id']);
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'kode_produk',
            'digunakan',
            'reset',
            'created_at',
            'flag',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if(isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function($model) {
                return $model->id;
            };
        endif;
        if(isset($parent['kode_produk'])) :
            unset($parent['kode_produk']);
            $parent['kode_produk'] = function($model) {
                return $model->kode_produk;
            };
        endif;
        if(isset($parent['digunakan'])) :
            unset($parent['digunakan']);
            $parent['digunakan'] = function($model) {
                return $model->digunakan;
            };
        endif;
        if(isset($parent['reset'])) :
            unset($parent['reset']);
            $parent['reset'] = function($model) {
                return $model->reset;
            };
        endif;
        if(isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->created_at, false);
            };
        endif;
        if(isset($parent['flag'])) :
            unset($parent['flag']);
            $parent['flag'] = function($model) {
                return $model->flag;
            };
        endif;


    // $parent['smarthome_master_produk_pair'] = function($model) {
    //     $rel = $model->smarthomeMasterProdukPairs;
    //     if($rel) :
    //         return $rel;
    //     endif;
    //     return null;
    // };
    // $parent['smarthome_sirkuit'] = function($model) {
    //     $rel = $model->smarthomeSirkuits;
    //     if($rel) :
    //         return $rel;
    //     endif;
    //     return null;
    // };

        return $parent;
    }


    public static function faker($count = 10){
        $faker= \Faker\Factory::create();
        $faker->addProvider(new \app\components\faker\provider\MyImage($faker));
        $data = [];
        $maxId = static::find()->max('id');

        // relational data
        for ($i = 0; $i < $count; $i++) {
            $data[] = [ 
                "kode_produk" => $faker->text(),
                "digunakan" => $faker->randomNumber(),
                "reset" => $faker->randomNumber(),
                "created_at" => $faker->dateTime(),
                "flag" => $faker->numberBetween(0, 1),
                "id" => $faker->unique()->numberBetween($maxId, $maxId + $count),
            ];
        }
        return $data;
    }

}
